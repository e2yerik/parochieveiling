type Account {
  email: String! @unique
  password: String!
}

type User {
  name: String!
  address: String!
  account: Account! @relation
}

type Price {
  """
  formatted price including currency symbol
  """
  formattedValue: String

  """
  raw price value
  """
  value: Float!

  type: String!
}

type AuctionBid {
  """
  user putting in the bid
  """
  bidder: User

  """
  price point
  """
  priceValue: Float

  """
  product bid on
  """
  product: Product!
}

type Product {
  """
  Optional parent product, used for multiple product bids
  """
  parentProduct: Product

  available: Boolean

  code: String!
  name: String!

  step: Int

  """
  short description
  """
  shortDescription: String!

  """
  complete description
  """
  longDescription: String!

  """
  product large image
  """
  imageUrl: String

  """
  product list thumbnail
  """
  thumbUrl: String

  """
  Price
  """
  price: Price!
}

type Query {
  allProducts: [Product]
  accountsByEmail(email: String!): [Account!]!
}
